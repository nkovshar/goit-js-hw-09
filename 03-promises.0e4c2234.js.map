{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAKtC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvB,IAAMC,EAAgBC,KAAKC,SAAW,GACrCC,YAAW,WACNH,EACFF,EAAI,CAAEH,WAAUC,UAEhBG,EAAI,CAAEJ,WAAUC,S,GAEjBA,E,IAZPL,EAAOa,iBAAiB,UAiBxB,SAAsBC,GACpBA,EAAIC,iBAKJ,IAHA,IAAIC,EAAQC,OAAOjB,EAAOK,MAAMa,OAC1BC,EAAOF,OAAOjB,EAAOmB,KAAKD,OAC1BE,EAAUH,OAAOjB,EAAOoB,OAAOF,OAC5BG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAI,CACnC,IAAMC,EAAWD,EAAI,EACrBrB,EAAOuB,QAETpB,EAAcmB,EADZN,GAASG,GAEVK,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAEvEyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onFormSubmit);\n\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n     setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n\n}\n\nfunction onFormSubmit(evt) { \n  evt.preventDefault();\n\n  let delay = Number(formEl.delay.value);\n  const step = Number(formEl.step.value);\n  const amount =  Number(formEl.amount.value);\n  for (let i = 0; i < amount; i += 1 ) { \n    const position = i + 1;\n    formEl.reset();\n    delay += step;\n  createPromise(position, delay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n    \n};\n\n\n\n\n\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","delay1","Number","value","step","amount","i","position1","reset","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.0e4c2234.js.map"}